name: Go

on:
  push:
    branches: [master]
    tags:
      - '*'
  pull_request:
    branches: [master]

jobs:
  build:
    name: Build, Lint and Test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.31

      - name: Build
        run: go build -v -ldflags="-s -w -X fisherman/constants.Version=${{ github.sha }}"

      - name: Test
        run: go test -race -cover -coverprofile='coverage.xml' -covermode=atomic -v ./...

      - name: Upload coverage profile
        if: startsWith(matrix.os, 'ubuntu')
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          name: fisherman
          fail_ci_if_error: true

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}
          path: |
            fisherman
            fisherman.exe

  realise:
    name: Realise application
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: Realise application with GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
